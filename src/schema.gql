# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateRewardInput {
  description: String
  isActive: Boolean! = true
  name: String!
  pointsCost: Int!
  stock: Int
}

input CreateUserInput {
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  createReward(input: CreateRewardInput!): Reward!
  createUser(input: CreateUserInput!): User!
  deleteReward(id: ID!): Boolean!
  redeemPoints(rewardId: ID!, userId: ID!): Transaction!
  registerPurchase(amount: Float!, userId: ID!): Transaction!
  updateReward(id: ID!, input: CreateRewardInput!): Reward!
}

type Query {
  getAvailableRewards(userId: ID!): [Reward!]!
  getReward(id: ID!): Reward!
  getRewards: [Reward!]!
  getSystemLogs: [SystemLog!]!
  getTransactionLogs(userId: ID!): [TransactionLog!]!
  getTransactions: [Transaction!]!
  getUserHistory(userId: ID!): [Transaction!]!
  getUserPoints(userId: ID!): UserPointsResponse!
  getUsers: [User!]!
}

type Reward {
  createdAt: DateTime!
  description: String
  id: ID!
  isActive: Boolean!
  name: String!
  pointsCost: Int!
  stock: Int
  updatedAt: DateTime!
}

type SystemLog {
  action: String!
  component: String!
  level: String!
  message: String!
  metadata: JSON
  success: Boolean!
  timestamp: DateTime!
}

type Transaction {
  date: DateTime!
  description: String
  id: ID!
  points: Int!
  reference: String
  type: String!
  user: User!
  userId: ID!
}

type TransactionLog {
  errorDetails: String
  level: String!
  message: String!
  metadata: JSON
  points: Float!
  status: String!
  timestamp: DateTime!
  transactionType: String!
  userId: ID!
}

type User {
  createdAt: DateTime!
  id: ID!
  name: String!
  totalPoints: Float!
  transactions: [Transaction!]
  updatedAt: DateTime!
}

type UserPointsResponse {
  id: ID!
  name: String!
  totalPoints: Float!
  updatedAt: DateTime!
}